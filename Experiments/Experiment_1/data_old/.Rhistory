name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
ggplot(ms, aes(x=context, y=nofeature, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = nofeature-cil,
ymax = nofeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,50),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
ms <- aggregate(samefeature ~ speaker + context, data= d,FUN=mean)
ms$cih <- aggregate(samefeature ~ speaker + context, data= d,FUN=ci.high)$samefeature
ms$cil <- aggregate(samefeature ~ speaker + context, data= d,FUN=ci.low)$samefeature
ggplot(ms, aes(x=context, y=samefeature, fill=speaker)) +
ggtitle("Generalizations to Same Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = samefeature-cil,
ymax = samefeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_x_discrete(name="") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
#NO_FEATURE#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(nofeature ~ speaker + context, data=d,FUN=mean)
ms$cih <- aggregate(nofeature ~ speaker + context, data=d,FUN=ci.high)$nofeature
ms$cil <- aggregate(nofeature ~ speaker + context, data=d,FUN=ci.low)$nofeature
ggplot(ms, aes(x=context, y=nofeature, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = nofeature-cil,
ymax = nofeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
#SAME_FEATURE#-----------------------------------------------------
ms <- aggregate(samefeature ~ speaker + context, data= d,FUN=mean)
ms$cih <- aggregate(samefeature ~ speaker + context, data= d,FUN=ci.high)$samefeature
ms$cil <- aggregate(samefeature ~ speaker + context, data= d,FUN=ci.low)$samefeature
ggplot(ms, aes(x=context, y=samefeature, fill=speaker)) +
ggtitle("Generalizations to Same Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = samefeature-cil,
ymax = samefeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_x_discrete(name="") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
ms <- aggregate(difffeature ~ speaker + context, data=d,FUN=mean)
ms$cih <- aggregate(difffeature ~ speaker + context, data=d,FUN=ci.high)$difffeature
ms$cil <- aggregate(difffeature ~ speaker + context, data=d,FUN=ci.low)$difffeature
ggplot(ms, aes(x=context, y=difffeature, fill=speaker)) +
ggtitle("Generalizations to Different Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = difffeature-cil,
ymax = difffeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_x_discrete(name="") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no Speaker")) +
theme_bw(base_size=18)
ms <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=mean)
ms$cih <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=ci.high)$bothfeatures
ms$cil <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=ci.low)$bothfeatures
ggplot(ms, aes(x=context, y=bothfeatures, fill=speaker)) +
ggtitle("Generalizations to Both Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bothfeatures-cil,
ymax = bothfeatures+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,50),
name = "Mean Bets") +
scale_x_discrete(name="") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
ms <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=mean)
ms$cih <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=ci.high)$bothfeatures
ms$cil <- aggregate(bothfeatures ~ speaker + context, data=d,FUN=ci.low)$bothfeatures
ggplot(ms, aes(x=context, y=bothfeatures, fill=speaker)) +
ggtitle("Generalizations to Both Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bothfeatures-cil,
ymax = bothfeatures+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_x_discrete(name="") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
theme_bw(base_size=18)
ms <- aggregate(bothfeatures ~ example, data=d,FUN=mean)
ms$cih <- aggregate(bothfeatures ~ example, data=d,FUN=ci.high)$bothfeatures
ms$cil <- aggregate(bothfeatures ~ example, data=d,FUN=ci.low)$bothfeatures
ggplot(ms, aes(x=example, y=bothfeatures)) +
ggtitle("Critical Feature Manipulation: Both Feature Flower Generalization") +
geom_bar(stat="identity",position = "dodge") +
geom_linerange(aes(ymin = bothfeatures-cil,
ymax = bothfeatures+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_x_discrete(name="") +
theme_bw(base_size=18)
summary(d)
names(d)
mdata <- melt(d, id=c("example","flowerName", "condition" , "speaker", "context" , "generalizations"))
summary(mdata)
names(mdata)
names(mdata)$variable
names(mdata)["variable"]
names(mdata)[variable]
names(mdata)["variable"] <- "measure"
names(mdata)[7] <- "measure"
names(mdata)[8] <- "bet"
summary(mdata)
ms <- aggregate(bet ~ speaker + context + measure, data=mdata,FUN=mean)
ms
ms$cih <- aggregate(bet ~ speaker + context + measure, data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure, data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = nofeature-cil,
ymax = nofeature+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure) +
theme_bw(base_size=18)
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure) +
theme_bw(base_size=18)
levels(mdata$measure)
mdata$measure <- factor(mdata$measure ,
levels = c("samefeature", "bothfeatures", "nofeature", "difffeature"))
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure, data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure, data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure, data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure) +
theme_bw(base_size=18)
lm(d$bothfeatures ~ d$context + d$speaker)
summary(lm(d$bothfeatures ~ d$context + d$speaker))
summary(lm(d$bothfeatures ~ d$context * d$speaker))
summary(d)
96+62
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure + example) +
theme_bw(base_size=18)
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(example ~ measure ) +
theme_bw(base_size=18)
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure + example, data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure + example, data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure + example, data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations to No Feature Flower") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure + example ) +
theme_bw(base_size=18)
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure + example, data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure + example, data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure + example, data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("Generalizations") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure + example ) +
theme_bw(base_size=18)
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure + example ) +
theme_bw(base_size=18)
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure , data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
setwd("/Documents/GRADUATE_SCHOOL/Projects/pragLearn/Elise Project/data/") # set working directory and read in data
d <- read.csv("flowerdata_SURVEY.csv",header=TRUE)
summary(d)
names(d)
mdata <- melt(d, id=c("example","name", "condition" , "speaker", "context" , "generalizations", "check_question"))
names(mdata)
names(mdata)[8] <- "measure"
names(mdata)[9] <- "bet"
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure , data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,1),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
mdata$measure <- factor(mdata$measure ,
levels = c("same_feature", "both_features", "no_feature", "diff_feature"))
mdata <- melt(d, id=c("example","name", "condition" , "speaker", "context" , "generalizations", "check_question"))
names(mdata)[8] <- "measure"
names(mdata)[9] <- "fc"
mdata$measure <- factor(mdata$measure ,
levels = c("same_feature", "both_features", "no_feature", "diff_feature"))
#compute mean correct across trials
ms <- aggregate(fc ~ speaker + context + measure , data=mdata, FUN=mean)
ms$cih <- aggregate(fc ~ speaker + context + measure , data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(fc ~ speaker + context + measure , data=mdata,FUN=ci.low)$bet
ms
ggplot(ms, aes(x=context, y=fc, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = fc-cil,
ymax = fc+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,1),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
ms$cih <- aggregate(fc ~ speaker + context + measure , data=mdata,FUN=ci.high)$fc
ms$cil <- aggregate(fc ~ speaker + context + measure , data=mdata,FUN=ci.low)$fc
ggplot(ms, aes(x=context, y=fc, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = fc-cil,
ymax = fc+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,1),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
setwd("/Documents/GRADUATE_SCHOOL/Projects/pragLearn/Elise Project/data/") # set working directory and read in data
ds <- read.csv("flowerdata_SURVEY.csv",header=TRUE)
msdata <- melt(ds, id=c("example","name", "condition" , "speaker", "context" , "generalizations", "check_question"))
names(msdata)[8] <- "measure"
names(msdata)[9] <- "fc"
msdata$measure <- factor(msdata$measure ,
levels = c("same_feature", "both_features", "no_feature", "diff_feature"))
#BY SHARED FEATURES#-----------------------------------------------------
#compute mean correct across trials
mss <- aggregate(fc ~ speaker + context + measure , data=msdata, FUN=mean)
mss$cih <- aggregate(fc ~ speaker + context + measure , data=msdata,FUN=ci.high)$fc
mss$cil <- aggregate(fc ~ speaker + context + measure , data=msdata,FUN=ci.low)$fc
ggplot(mss, aes(x=context, y=fc, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = fc-cil,
ymax = fc+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,1),
name = "Prop. Choice") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
length(ds)
dim(ds)
summary(ds)
dim(d)
#--READ IN DATA--
setwd("/Documents/GRADUATE_SCHOOL/Projects/pragLearn/Elise Project/data/") # set working directory and read in data
d <- read.csv("flowerdata_TURK.csv",header=TRUE)
dim(d)
summary(ds)
ds$check_question
length(ds$check$question)
length(ds$check_question)
## contextandspeaker TURK Analysis
# Elise Sugarman December 2013
# Bar graphs
rm(list=ls())
#--LOAD PACKAGES--
library(ggplot2)
library(boot)
library(bootstrap)
library(reshape2)
# LOAD FUNCTIONS
# code for bootstrapping 95% confidence intervals
theta <- function(x,xdata,na.rm=T) {mean(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
mean(x,na.rm=na.rm) - quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,.975,na.rm=na.rm) - mean(x,na.rm=na.rm)}
#BET DATA-----------------------------------------------------
#--READ IN DATA--
setwd("/Documents/GRADUATE_SCHOOL/Projects/pragLearn/Elise Project/data/") # set working directory and read in data
d <- read.csv("flowerdata_TURK.csv",header=TRUE)
summary(d)
mdata <- melt(d, id=c("example","flowerName", "condition" , "speaker", "context" , "generalizations"))
summary(mdata)
names(mdata)[7] <- "measure"
names(mdata)[8] <- "bet"
mdata$measure <- factor(mdata$measure ,
levels = c("samefeature", "bothfeatures", "nofeature", "difffeature"))
#compute mean correct across trials
ms <- aggregate(bet ~ speaker + context + measure , data=mdata, FUN=mean)
ms$cih <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.high)$bet
ms$cil <- aggregate(bet ~ speaker + context + measure , data=mdata,FUN=ci.low)$bet
ggplot(ms, aes(x=context, y=bet, fill=speaker)) +
ggtitle("generalization item") +
geom_bar(stat="identity",position = "dodge",aes(fill=speaker))+
geom_linerange(aes(ymin = bet-cil,
ymax = bet+cih),
size = 1.2,
position = position_dodge(.9)) +
geom_hline(yintercept=50,lty=2) +
scale_x_discrete(name="") +
scale_y_continuous(limits = c(0,100),
name = "Mean Bets") +
scale_fill_discrete(name="",
breaks=c("\"speaker\"", "\"no speaker\""),
labels=c("speaker", "no speaker")) +
facet_grid(. ~ measure ) +
theme_bw(base_size=18)
